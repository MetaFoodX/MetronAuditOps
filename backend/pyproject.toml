[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app"]
known_third_party = ["fastapi", "uvicorn", "boto3", "pymysql", "redis", "rq", "apscheduler", "pydantic", "numpy", "pandas", "torch", "opencv", "ultralytics", "google", "matplotlib", "seaborn", "plotly", "dash", "scikit", "pillow", "requests", "flask", "yaml", "json", "logging", "asyncio", "threading", "tempfile", "pathlib", "datetime", "typing", "uuid", "io", "gzip", "struct", "zipfile", "pickle", "base64", "time", "os", "sys", "glob", "csv", "shutil", "socket", "stat"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true
ignore_missing_imports = true
files = ["backend/app/utils", "backend/app/models.py"]

[[tool.mypy.overrides]]
module = [
    "boto3.*",
    "botocore.*",
    "pymysql.*",
    "sshtunnel.*",
    "paramiko.*",
    "redis.*",
    "rq.*",
    "apscheduler.*",
    "ultralytics.*",
    "torch.*",
    "torchvision.*",
    "opencv.*",
    "open3d.*",
    "google.*",
    "plotly.*",
    "dash.*",
    "matplotlib.*",
    "seaborn.*",
    "scikit.*",
    "pillow.*",
    "flask.*",
    "yaml.*",
    "json.*",
    "logging.*",
    "asyncio.*",
    "threading.*",
    "tempfile.*",
    "pathlib.*",
    "datetime.*",
    "typing.*",
    "uuid.*",
    "io.*",
    "gzip.*",
    "struct.*",
    "zipfile.*",
    "pickle.*",
    "base64.*",
    "time.*",
    "os.*",
    "sys.*",
    "glob.*",
    "csv.*",
    "shutil.*",
    "socket.*",
    "stat.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "venv", "env"]
skips = ["B101", "B601"]

[tool.safety]
output = "json"
