name: Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

jobs:
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event.inputs.environment == 'staging'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.CONTAINER_REGISTRY || 'ghcr.io' }}
        username: ${{ secrets.REGISTRY_USERNAME || github.actor }}
        password: ${{ secrets.REGISTRY_PASSWORD || secrets.GITHUB_TOKEN }}

    - name: Build backend image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: true
        tags: ${{ secrets.CONTAINER_REGISTRY || 'ghcr.io' }}/${{ github.repository_owner }}/metronauditops/metron-audit-backend:staging-${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: true
        tags: ${{ secrets.CONTAINER_REGISTRY || 'ghcr.io' }}/${{ github.repository_owner }}/metronauditops/metron-audit-frontend:staging-${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment..."
        echo "Backend image: ${{ secrets.CONTAINER_REGISTRY || 'ghcr.io' }}/${{ github.repository_owner }}/metronauditops/metron-audit-backend:staging-${{ github.sha }}"
        echo "Frontend image: ${{ secrets.CONTAINER_REGISTRY || 'ghcr.io' }}/${{ github.repository_owner }}/metronauditops/metron-audit-frontend:staging-${{ github.sha }}"
        # Add your deployment commands here
        # Example: kubectl apply, gcloud run deploy, etc.
        # kubectl apply -f k8s/staging/
        # gcloud run deploy metron-audit-backend --image=${{ secrets.CONTAINER_REGISTRY || 'ghcr.io' }}/${{ github.repository_owner }}/metronauditops/metron-audit-backend:staging-${{ github.sha }} --region=us-central1 --platform=managed

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: github.event.inputs.environment == 'production'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.CONTAINER_REGISTRY || 'ghcr.io' }}
        username: ${{ secrets.REGISTRY_USERNAME || github.actor }}
        password: ${{ secrets.REGISTRY_PASSWORD || secrets.GITHUB_TOKEN }}

    - name: Build backend image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: true
        tags: |
          ${{ secrets.CONTAINER_REGISTRY || 'ghcr.io' }}/${{ github.repository_owner }}/metronauditops/metron-audit-backend:production-${{ github.sha }}
          ${{ secrets.CONTAINER_REGISTRY || 'ghcr.io' }}/${{ github.repository_owner }}/metronauditops/metron-audit-backend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: true
        tags: |
          ${{ secrets.CONTAINER_REGISTRY || 'ghcr.io' }}/${{ github.repository_owner }}/metronauditops/metron-audit-frontend:production-${{ github.sha }}
          ${{ secrets.CONTAINER_REGISTRY || 'ghcr.io' }}/${{ github.repository_owner }}/metronauditops/metron-audit-frontend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Deploy to production
      run: |
        echo "Deploying to production environment..."
        echo "Backend image: ${{ secrets.CONTAINER_REGISTRY || 'ghcr.io' }}/${{ github.repository_owner }}/metronauditops/metron-audit-backend:production-${{ github.sha }}"
        echo "Frontend image: ${{ secrets.CONTAINER_REGISTRY || 'ghcr.io' }}/${{ github.repository_owner }}/metronauditops/metron-audit-frontend:production-${{ github.sha }}"
        # Add your deployment commands here
        # Example: kubectl apply, gcloud run deploy, etc.
        # kubectl apply -f k8s/production/
        # gcloud run deploy metron-audit-backend --image=${{ secrets.CONTAINER_REGISTRY || 'ghcr.io' }}/${{ github.repository_owner }}/metronauditops/metron-audit-backend:production-${{ github.sha }} --region=us-central1 --platform=managed

    - name: Notify deployment
      run: |
        echo "Production deployment completed successfully!"
        # Add notification logic (Slack, email, etc.)
        # curl -X POST -H 'Content-type: application/json' --data '{"text":"Production deployment completed!"}' ${{ secrets.SLACK_WEBHOOK_URL }}
